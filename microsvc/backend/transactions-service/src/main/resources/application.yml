server:
  port: 8083
  servlet:
    context-path: /

spring:
  application:
    name: transactions-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/banking_app
    username: transactions_service_user
    password: transactions_service_pass
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: transactions_service
    user: transactions_service_user
    password: transactions_service_pass
    url: jdbc:postgresql://localhost:5432/banking_app

# External Service URLs
accounts:
  service:
    url: http://localhost:8082

# JWT Configuration
jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000

# Logging Configuration
logging:
  level:
    com.banking.transactionsservice: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# OpenTelemetry Configuration
otel:
  service:
    name: transactions-service
  traces:
    exporter: jaeger
  metrics:
    exporter: prometheus