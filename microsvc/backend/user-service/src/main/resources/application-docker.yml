# Shared Spring Boot configuration for Docker environment
# This file should be copied to each service's resources directory

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:banking_app}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      minimum-idle: ${DB_POOL_MIN_SIZE:5}
      maximum-pool-size: ${DB_POOL_MAX_SIZE:20}
      pool-name: BankingHikariCP
      auto-commit: false
      
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      default_schema: ${DB_SCHEMA}
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        default_schema: ${DB_SCHEMA}

  flyway:
    schemas: ${DB_SCHEMA}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

# Actuator configuration for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    com.banking: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/banking-app.log

# OpenTelemetry configuration
otel:
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      protocol: http/protobuf
      endpoint: http://jaeger:4318
  traces:
    exporter: otlp
  metrics:
    exporter: otlp
  logs:
    exporter: otlp
  propagation:
    type: w3c